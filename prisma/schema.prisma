datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now()) @map("created_at")
  tokens    Token[]
  carts     Cart[]
  likes     Like[]

  @@map("users")
}

model Token {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map(name: "user_id")
  jti       String   @unique @default(uuid())

  @@map(name: "tokens")
}

model Like {
  id        String  @id @default(uuid())
  userId    String  @map("user_id")
  user      User    @relation(fields: [userId], references: [id])
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  @@map("likes")
}

model Contain {
  id        String  @id @default(uuid())
  cartId    String  @map("cart_id")
  cart      Cart    @relation(fields: [cartId], references: [id])
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int

  @@map("containts")
}

model Cart {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  wasBoght  Boolean   @default(false) @map("was_bought")
  containts Contain[]

  @@map("carts")
}

model Product {
  id          String    @id @default(uuid())
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @map("updated_at")
  category    String
  price       Float
  image       String
  visible     Boolean   @default(true)
  stock       Int
  likes       Like[]
  containts   Contain[]

  @@map("products")
}
